<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ımageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB4
        CQAAAk1TRnQBSQFMAgEBBAEAARgBAAEYAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABKAMAAQEBAAEgBgABMv8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wA4AAMZASIDPgFqA00BoQNNAa0DSgGOAzEBTgMEAQU0AAMJAQsDOwFlA0wBsgNHAcgDTQGg
        AzABStAAAwUBBgM9AdgDAAH/AwkB+wNKAbwDTQGkAz0B1gMAAf8DDwH5A0kBkCwAAz4B1wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DTAGcxAADLgFHAwAB/wNIAckDCgENFAADNAFUAxoB8wMUAfUDBwEJ
        HAADGAEhAwAB/wMAAf8DRgHHAxUBHAgAAwIBAwMjATMDFAH3AwAB/wMSAfhwAAM+AWsDSgGWA0oBlgNK
        AZYDSgGWA0oBlgNKAZYDSgGWA0oBlgM7AWMDCgENIAADHwEsAwMB/gNAAW8gAAMJAQwDJwHsAzoB2QMC
        AQMUAAMIAQoDAAH/AwAB/wMCAQMcAAM/AW4DAAH/AxIB+GwAA0kBxQMjATMDIwEzAyMBMwMjATMDIwEz
        AyMBMwMjATMDNgFXA0cBiAMUARsjAAH/A0oBkS8AAf8DQwF5RAADQAFvAwAB/wNMAZ1oAANIAcQcAAMX
        AR8DNgFYAw8BExwAAz8BbAMaAfMDAgEDLAADNAFUAwAB/xgAAy0BRiwAAxQB9wMAAf9oAANIAcQEAAQB
        AxsBJgM2AVcDNgFYAzYBWAM2AVgDNgFYAzYBWAM2AVgDNgFYAzABTAMNAREQAAM4Ad4DTQGhMAAEAgMX
        AfQDLgFHDAADBQEGAyAB7wNDAXcsAAMjATMDAAH/AzABSmQAA0gBxAQAAwQBBQM7AWUDSgGSAzsBYwM7
        AWMDOwFjAzsBYwM7AWMDOwFjAzsBYwNMAaIDJAE0EAADFAH3Ax0BKTQAAz4B1wNNAa4IAAMVARwDAwH+
        AwAB/wNDAXcsAAMCAQMDAAH/A00BoAQAAyEBMANNAZ8DTwGqA08BqgNPAaoDTwGqA08BqgNPAaoDTwGq
        A08BqgNPAaoDTwGqA08BqgNPAaoDTwGqA08BqgNPAaoDTwGqA00BnwMhATAQAANIAcQEAAMFAQYDPQFo
        AzYBWQMCAQMDAgEDAwIBAwMCAQMDAgEDAwIBAwMCAQMDSQGKAygBOwwAAwUBBgMAAf8EAjQAA0YBxwNF
        Ac4EAAM5AV4DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/GwAB/wNHAcgEAAND
        Ad4DHQH/Ax0B/wMdAf8DHQH/Ax0B/wMdAf8DHQH/Ax0B/wMdAf8DHQH/Ax0B/wMdAf8DHQH/Ax0B/wMd
        Af8DHQH/Ax0B/wMdAf8DRAHdEAADSAHEBAADBQEGAz0BaAM2AVccAANJAYkDKAE7EAADAwH+Aw8BEzQA
        A0IB0QNHAcYIAANNAa8DAAH/AwAB/wNKAb8DRwGIA0cBiANHAYgDRwGIA0cBiANHAYgbAAH/A0wBtAQA
        A0MB3gMdAf8DHQH/Ax0B/wMdAf8DHQH/Ax0B/wMdAf8DHQH/Ax0B/wMdAf8DHQH/Ax0B/wMdAf8DHQH/
        Ax0B/wMdAf8DHQH/Ax0B/wNDAd4QAANIAcQEAAMFAQYDPQFoAzYBVxwAA0kBiQMoATsQAAMoAeoDPwFt
        NAADKgHoA0IBdgwAAzMBUAMAAf8DQwF3LAADFQEcAwAB/wM9AWcEAAMiATEDTQGfA08BqgNPAaoDTwGq
        A08BqgNPAaoDTwGqA08BqgNPAaoDTwGqA08BqgNPAaoDTwGqA08BqgNPAaoDTwGqA08BqgNNAZ8DIQEw
        EAADSAHEAw8BFAMMAQ8DPQFoAzYBVxwAA0kBiQMoATsQAANNAbMDNwHdMAADGwEmAwAB/wMGAQcQAAMT
        ARkDQgF0LAADRwHGAwAB/wMJAQtkAANLAZ8DRwGFAzEBTQM9AWgDNgFXHAADSQGJAygBOxAAAwYBCAMA
        Af8DKwFBEAADLQFGAwAB/xQAA0wBvQM6AdtEAAMCAQMDAAH/AzoB2WgAAxQEGwElAxMBGgM9AWgDNgFX
        HAADSQGJAygBOxQAA0kBiQMUAfYDCAEKDAADMQFNAwAB/xAAA0UBfQMGAf0DEgEXRwAB/wMAAf90AAMF
        AQYDPQFoAzYBVxwAA0kBiQMoATsYAANJAcUDAAH/AyIBMQgAAzEBTQMAAf8MAANNAaYDAAH/Ay0BRhwA
        A00BrQMAAf8DBgH9Ax0BKRAABAIDQAFxAwAB/wMAAf8DGgEkdAADBAEFAzsBZANKAZEDOwFjAzsBYwM7
        AWMDOwFjAzsBYwM7AWMDOwFjA0sBnwMkATUcAANLAZcDAAH/AzoB2QMcAScDMQFNAwAB/wQAA0QBfAMD
        Af4DKQHrAx4BKyQAAzsBZQMAAf8DAAH/AwAB/wMoAeoDQgHRAwkB+wMAAf8DAAH/AxIB+AMHAQl4AAQB
        AxsBJgM3AVoDOAFcAzgBXAM4AVwDOAFcAzgBXAM4AVwDOAFcAzIBTwMMAQ8gAAMSARcDSwGVAyQBNQMx
        AU0DAAH/BAADTQGkAzIBTwMEAQUsAAQCA0ABcAMUAfYDAAH/AwAB/wMAAf8DPgHXAy0BRNwAAzEBTQMA
        Af//ADkAAyoBQAMAAf//AGUAAUIBTQE+BwABPgMAASgDAAFQAwABKAMAAQEBAAEBBQAB4AEBFgAD//EA
        CP8B4AE/AgAB/gEHBv8BgAEfAgAB/AEBBv8BDwGHAgAB8AFgA/8B8AEBAf4BPwHDAgAB4QH8AX8C/wHw
        AQEB/gF/AfMCAAH/Af4BPwL/AfcB8QH8AX8B8wIAAfcB/wE/Av8B9AEAATwB/wHxAgABxwH/AR8C/wH0
        AQABPAH/AfkCAAGHAf8BEAIAAfQBAAE4Af8B+QMAAR8BkAIAAfQBfwE8Af8B+QIAAYABHwGQAgAB9AF/
        ATwB/wH5AgABxwH/ARACAAHwAX8BPAH/AfECAAHnAf8BHwL/AfABfwE8AXkB8wIAAf8B/gE/Av8B8AF/
        AT4BOQHjAgAB/wH+AX8C/wH8AX8BPwEZAccCAALwAX8C/wH8AQABPwGBAQ8CAAH4AQAD/wH8AQABPwHB
        AR8CAAH8AQMG/wH5Af8CAAj/AfkB/wIACv8CAAs=
</value>
  </data>
</root>