<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ımageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB4
        CQAAAk1TRnQBSQFMAgEBBAEAATgBAAE4AQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABKAMAAQEBAAEgBgABMv8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wA4AAMZASIDPgFqA1EBoQNVAa0DTAGOAzEBTgMEAQU0AAMJAQsDOwFlA1YBsgNbAcgDUgGg
        AzABStAAAwUBBgNWAdgDAAH/AxUB+wNXAbwDUQGkA1cB1gMAAf8DHAH5A0wBkCwAA1cB1wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DUAGcxAADLgFHAwAB/wNaAckDCgENFAADNAFUAzEB8wMpAfUDBwEJ
        HAADGAEhAwAB/wMAAf8DWQHHAxUBHAgAAwIBAwMjATMDJQH3AwAB/wMgAfhwAAM+AWsDTgGWA04BlgNO
        AZYDTgGWA04BlgNOAZYDTgGWA04BlgM7AWMDCgENIAADHwEsAwcB/gNAAW8gAAMJAQwDQwHsA1YB2QMC
        AQMUAAMIAQoDAAH/AwAB/wMCAQMcAAM/AW4DAAH/AyAB+GwAA1oBxQMjATMDIwEzAyMBMwMjATMDIwEz
        AyMBMwMjATMDNgFXA0kBiAMUARsjAAH/A0wBkS8AAf8DRAF5RAADQAFvAwAB/wNQAZ1oAANaAcQcAAMX
        AR8DNgFYAw8BExwAAz8BbAMxAfMDAgEDLAADNAFUAwAB/xgAAy0BRiwAAyUB9wMAAf9oAANaAcQEAAQB
        AxsBJgM2AVcDNgFYAzYBWAM2AVgDNgFYAzYBWAM2AVgDNgFYAzABTAMNAREQAANUAd4DUQGhMAAEAgMs
        AfQDLgFHDAADBQEGAzoB7wNDAXcsAAMjATMDAAH/AzABSmQAA1oBxAQAAwQBBQM7AWUDTQGSAzsBYwM7
        AWMDOwFjAzsBYwM7AWMDOwFjAzsBYwNRAaIDJAE0EAADJQH3Ax0BKTQAA1cB1wNVAa4IAAMVARwDBwH+
        AwAB/wNDAXcsAAMCAQMDAAH/A1IBoAQAAyEBMANQAZ8DUwGqA1MBqgNTAaoDUwGqA1MBqgNTAaoDUwGq
        A1MBqgNTAaoDUwGqA1MBqgNTAaoDUwGqA1MBqgNTAaoDUwGqA1ABnwMhATAQAANaAcQEAAMFAQYDPQFo
        AzYBWQMCAQMDAgEDAwIBAwMCAQMDAgEDAwIBAwMCAQMDSgGKAygBOwwAAwUBBgMAAf8EAjQAA1kBxwNZ
        Ac4EAAM5AV4DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/GwAB/wNbAcgEAANW
        Ad4DHQH/Ax0B/wMdAf8DHQH/Ax0B/wMdAf8DHQH/Ax0B/wMdAf8DHQH/Ax0B/wMdAf8DHQH/Ax0B/wMd
        Af8DHQH/Ax0B/wMdAf8DVwHdEAADWgHEBAADBQEGAz0BaAM2AVccAANKAYkDKAE7EAADBwH+Aw8BEzQA
        A1kB0QNZAcYIAANVAa8DAAH/AwAB/wNZAb8DSQGIA0kBiANJAYgDSQGIA0kBiANJAYgbAAH/A1UBtAQA
        A1YB3gMdAf8DHQH/Ax0B/wMdAf8DHQH/Ax0B/wMdAf8DHQH/Ax0B/wMdAf8DHQH/Ax0B/wMdAf8DHQH/
        Ax0B/wMdAf8DHQH/Ax0B/wNWAd4QAANaAcQEAAMFAQYDPQFoAzYBVxwAA0oBiQMoATsQAANFAeoDPwFt
        NAADRwHoA0MBdgwAAzMBUAMAAf8DQwF3LAADFQEcAwAB/wM9AWcEAAMiATEDUAGfA1MBqgNTAaoDUwGq
        A1MBqgNTAaoDUwGqA1MBqgNTAaoDUwGqA1MBqgNTAaoDUwGqA1MBqgNTAaoDUwGqA1MBqgNQAZ8DIQEw
        EAADWgHEAw8BFAMMAQ8DPQFoAzYBVxwAA0oBiQMoATsQAANWAbMDUwHdMAADGwEmAwAB/wMGAQcQAAMT
        ARkDQgF0LAADWQHGAwAB/wMJAQtkAANQAZ8DSQGFAzEBTQM9AWgDNgFXHAADSgGJAygBOxAAAwYBCAMA
        Af8DKwFBEAADLQFGAwAB/xQAA1gBvQNWAdtEAAMCAQMDAAH/A1YB2WgAAxQEGwElAxMBGgM9AWgDNgFX
        HAADSgGJAygBOxQAA0oBiQMlAfYDCAEKDAADMQFNAwAB/xAAA0YBfQMOAf0DEgEXRwAB/wMAAf90AAMF
        AQYDPQFoAzYBVxwAA0oBiQMoATsYAANaAcUDAAH/AyIBMQgAAzEBTQMAAf8MAANTAaYDAAH/Ay0BRhwA
        A1UBrQMAAf8DDgH9Ax0BKRAABAIDQAFxAwAB/wMAAf8DGgEkdAADBAEFAzsBZANMAZEDOwFjAzsBYwM7
        AWMDOwFjAzsBYwM7AWMDOwFjA1ABnwMkATUcAANOAZcDAAH/A1YB2QMcAScDMQFNAwAB/wQAA0UBfAMH
        Af4DRwHrAx4BKyQAAzsBZQMAAf8DAAH/AwAB/wNFAeoDWQHRAxUB+wMAAf8DAAH/AyAB+AMHAQl4AAQB
        AxsBJgM3AVoDOAFcAzgBXAM4AVwDOAFcAzgBXAM4AVwDOAFcAzIBTwMMAQ8gAAMSARcDTgGVAyQBNQMx
        AU0DAAH/BAADUQGkAzIBTwMEAQUsAAQCA0ABcAMlAfYDAAH/AwAB/wMAAf8DVwHXAy0BRNwAAzEBTQMA
        Af//ADkAAyoBQAMAAf//AGUAAUIBTQE+BwABPgMAASgDAAFQAwABKAMAAQEBAAEBBQAB4AEBFgAD//EA
        CP8B4AE/AgAB/gEHBv8BgAEfAgAB/AEBBv8BDwGHAgAB8AFgA/8B8AEBAf4BPwHDAgAB4QH8AX8C/wHw
        AQEB/gF/AfMCAAH/Af4BPwL/AfcB8QH8AX8B8wIAAfcB/wE/Av8B9AEAATwB/wHxAgABxwH/AR8C/wH0
        AQABPAH/AfkCAAGHAf8BEAIAAfQBAAE4Af8B+QMAAR8BkAIAAfQBfwE8Af8B+QIAAYABHwGQAgAB9AF/
        ATwB/wH5AgABxwH/ARACAAHwAX8BPAH/AfECAAHnAf8BHwL/AfABfwE8AXkB8wIAAf8B/gE/Av8B8AF/
        AT4BOQHjAgAB/wH+AX8C/wH8AX8BPwEZAccCAALwAX8C/wH8AQABPwGBAQ8CAAH4AQAD/wH8AQABPwHB
        AR8CAAH8AQMG/wH5Af8CAAj/AfkB/wIACv8CAAs=
</value>
  </data>
</root>